~~~~~~~~~~~~
~~  TODO
~~~~~~~~~~~~


// Pride flag!

// Wavy flag
speed = 1.3;

wave = sinq(T * speed + X * 2.2);
wave -= sinq(T * 0.7 + X * 1.414);
wave *= 0.09;

y = Y + wave;

// 6 distinct bands of color
c = floor(y * 6) / 6;

// Clamp inside red...magenta
c = clamp(c, 0, 0.83333);

// Pride colors: Cyan -> green, green -> yellow
c = (c < 0.6) ? (c - 0.166667) : c;

// Pride colors: Red, orange, yellow
// Fix the top magenta and red
c = (c < 0.2) ? ((c + 0.166667) / 2) : c;

led = hsv(c, 1, 1);






// 1st strip
led = hsv(T * 0.1 + P, 1, (I < 76) ? 1 : 0)

// 2nd strip // ugh some code error here, lights up 2 strips
led = hsv(T * 0.1 + P, 1, ((76 <= I) && (I < 152)) ? 1 : 0)

// 3rd strip
led = hsv(T * 0.1 + P, 1, (152 <= I) ? 1 : 0)



// X & Y test
speed = 0.15;
x = tri(X * 0.5 + T * speed);
y = tri(Y * 0.5 + T * speed + 0.5);
x *= x;
x *= x;
x *= x;
y *= y;
y *= y;
y *= y;
led = rgb(x, 0, y)




// Blinky blue sassiness
led = rgb(0, 0, sin01(T * 3 + P * 100))



* USB is a separate buffer

* ramp() function



Lexer tasks:
(See the casual.pm board)

- Modulo '%' ?


// Rainbow test
led = hsv(T * 0.1 + P * 3, 1, 1);


// Rainbow with hue noise
led = hsv(T * 0.3 + tri(accum0(sin01(P) * 0.001)) * 0.2, 1, 1)



// Noise test
t = T * 0.1 + P;
led = rgb(0, 0, noise2(t, t * 4.7))



// LED position map test
t = T * 0.1;
x = tri(X * 0.5 + t + 0.5);
x *= x * x;
y = tri(Y * 0.5 + t);
y *= y * y;
led = rgb(x, 0, y)



// Rainbow contrast test
led = hsv(T * 0.3 + P * 3, 1, sin01(T + P * 16))



// BUG: Op precedence: Does (4 - 8) first
led = rgb(0, peak(P * 4 - 8), 0)







*************
**  LEDs
*************

T = 63
O = 108
O = 108
R = 102
C = 81
A = 108
M = 147
P = 90

Total modules: 807






Power:
12VDC power, 0.72W per LED module

'M' is 105.84 Watts, or 8.82 amps






>>>>>>>>>>>>>
>>  SERIAL
>>>>>>>>>>>>>

Down the line (higher stations:)
Serial2
    RX 9, TX 10

Up the line (lower stations:)
Serial1
		RX 0, TX 1


led = rgb(0.04 * sin(I + T), 0, 0);





// Red & blue chasers
red = 1.0 - frac(T + P * 4);
red *= red * red;
blue = 1.0 - frac(T + P * 2.7);
blue *= blue;
blue *= blue;
led = rgb(red * 0.1, 0, blue * 0.1);
